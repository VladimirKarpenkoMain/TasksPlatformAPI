# Generated by Django 5.0.6 on 2024-07-12 18:17

import api.models
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                ("description_ru", models.TextField(verbose_name="Русское описание")),
                (
                    "description_en",
                    models.TextField(verbose_name="Английское описание"),
                ),
            ],
            options={
                "verbose_name": "Профиль",
                "verbose_name_plural": "Профили",
            },
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("comment", models.TextField(verbose_name="Комментарий")),
                (
                    "admin_comment",
                    models.TextField(
                        blank=True, null=True, verbose_name="Комментарий администратора"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACCEPTED", "Принята"),
                            ("WAITING", "В ожидании"),
                            ("REJECTED", "Отклонена"),
                        ],
                        default="WAITING",
                        max_length=15,
                        verbose_name="Статус",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ответ",
                "verbose_name_plural": "Ответы",
            },
        ),
        migrations.CreateModel(
            name="SubmissionHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "changed_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время изменения"
                    ),
                ),
                (
                    "previous_comment",
                    models.TextField(verbose_name="Предыдущий комментарий"),
                ),
                (
                    "previous_admin_comment",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Предыдущий комментарий администратора",
                    ),
                ),
                (
                    "previous_status",
                    models.CharField(
                        choices=[
                            ("ACCEPTED", "Принята"),
                            ("WAITING", "В ожидании"),
                            ("REJECTED", "Отклонена"),
                        ],
                        default="WAITING",
                        max_length=15,
                        verbose_name="Предыдущий статус",
                    ),
                ),
            ],
            options={
                "verbose_name": "История ответа",
                "verbose_name_plural": "История ответов",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "title_ru",
                    models.CharField(max_length=180, verbose_name="Название задачи RU"),
                ),
                (
                    "title_en",
                    models.CharField(max_length=180, verbose_name="Название задачи EN"),
                ),
                ("description_ru", models.TextField(verbose_name="Описание задачи RU")),
                ("description_en", models.TextField(verbose_name="Описание задачи EN")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("AVAILABLE", "Доступна"),
                            ("IN_PROGRESS", "В ожидании"),
                            ("DONE", "Готова"),
                            ("REWORK", "На доработке"),
                        ],
                        default="AVAILABLE",
                        max_length=15,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("FREE", "Свободная"), ("SPECIFIC", "Конкретная")],
                        default="FREE",
                        max_length=15,
                        verbose_name="Тип",
                    ),
                ),
            ],
            options={
                "verbose_name": "Задача",
                "verbose_name_plural": "Задачи",
            },
        ),
        migrations.CreateModel(
            name="TaskProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Соответствие профиля и задачи",
                "verbose_name_plural": "Таблица соответствия профиля и задач",
            },
        ),
        migrations.CreateModel(
            name="TaskSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Соответствие задачи и ответа",
                "verbose_name_plural": "Таблица соответствия задачи и ответа",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Соответствие профиля и пользователя",
                "verbose_name_plural": "Таблица соответствия профиля и пользователя",
            },
        ),
        migrations.CreateModel(
            name="ProfileFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=api.models.ProfileFile.get_upload_path,
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="api.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Файл профиля",
                "verbose_name_plural": "Файлы профиля",
            },
        ),
    ]
